{"version":3,"sources":["App.js","index.js"],"names":["searchClient","instantMeiliSearch","finitePagination","refreshPage","window","location","reload","validInitialConsonants","Set","doubleConsonants","ㄳ","ㄵ","ㄶ","ㄺ","ㄻ","ㄼ","ㄽ","ㄾ","ㄿ","ㅀ","ㅄ","Hit","_ref","hit","lyricsSnippet","_highlightResult","lyrics","highlightedLyrics","snippet","value","highlightTagStart","indexOf","highlightTagEnd","contextBefore","slice","Math","max","highlightedText","contextAfter","min","length","contextSnippet","concat","React","createElement","className","dangerouslySetInnerHTML","__html","getMatchedLyricsSnippet","key","id","Highlight","attribute","tagName","Snippet","youtube_url","href","target","rel","App","onClick","style","cursor","color","textDecoration","role","aria-label","InstantSearch","indexName","SortBy","defaultrefinement","items","label","RefinementList","Configure","hitsPerPage","attributesToSnippet","snippetEllipsisText","SearchBox","autoFocus","placeholder","queryHook","query","refine","input","result","r","has","push","join","segmentConsonants","Hits","hitComponent","Pagination","showLast","totalPages","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a5d1e1e.chunk.js","sourcesContent":["import { instantMeiliSearch } from \"@meilisearch/instant-meilisearch\";\nimport \"instantsearch.css/themes/algolia-min.css\";\nimport React from \"react\";\nimport {\n  Configure,\n  Highlight,\n  Hits,\n  InstantSearch,\n  Pagination,\n  RefinementList,\n  SearchBox,\n  Snippet,\n  SortBy,\n} from \"react-instantsearch\";\nimport \"./App.css\";\nimport \"./Modal.css\";\n\nconst { searchClient } = instantMeiliSearch(\n  \"https://csw-meilisearch.up.railway.app\",\n  \"40db54d9ebd0d8808f4a1d3583422d15530936254ee7dd7c2ce81c96299c27be\",\n  {\n    finitePagination: true,\n  }\n);\n\nconst refreshPage = () => {\n  window.location.reload();\n};\n\nconst validInitialConsonants = new Set([\n  \"ㄱ\",\n  \"ㄲ\",\n  \"ㄴ\",\n  \"ㄷ\",\n  \"ㄸ\",\n  \"ㄹ\",\n  \"ㅁ\",\n  \"ㅂ\",\n  \"ㅃ\",\n  \"ㅅ\",\n  \"ㅆ\",\n  \"ㅇ\",\n  \"ㅈ\",\n  \"ㅉ\",\n  \"ㅊ\",\n  \"ㅋ\",\n  \"ㅌ\",\n  \"ㅍ\",\n  \"ㅎ\",\n]);\n\nconst doubleConsonants = {\n  ㄳ: [\"ㄱ\", \"ㅅ\"],\n  ㄵ: [\"ㄴ\", \"ㅈ\"],\n  ㄶ: [\"ㄴ\", \"ㅎ\"],\n  ㄺ: [\"ㄹ\", \"ㄱ\"],\n  ㄻ: [\"ㄹ\", \"ㅁ\"],\n  ㄼ: [\"ㄹ\", \"ㅂ\"],\n  ㄽ: [\"ㄹ\", \"ㅅ\"],\n  ㄾ: [\"ㄹ\", \"ㅌ\"],\n  ㄿ: [\"ㄹ\", \"ㅍ\"],\n  ㅀ: [\"ㄹ\", \"ㅎ\"],\n  ㅄ: [\"ㅂ\", \"ㅅ\"],\n};\n\nconst segmentConsonants = input => {\n  const result = [];\n\n  for (const r of input) {\n    if (validInitialConsonants.has(r)) {\n      result.push(r);\n    } else if (doubleConsonants[r]) {\n      result.push(...doubleConsonants[r]);\n    } else {\n      result.push(r);\n    }\n  }\n\n  return result.join(\"\");\n};\n\n\nconst App = () => {\n  // const [filterLyrics, setFilterLyrics] = useState(false);\n\n  const queryHook = (query, refine) => {\n    const segmentedQuery = segmentConsonants(query);\n    // const finalQuery = filterLyrics ? `lyrics:${segmentedQuery}` : segmentedQuery;\n    refine(segmentedQuery);\n  };\n  \n  return (\n    <div className=\"ais-InstantSearch\">\n      <h1>\n        <a\n          href=\"#\"\n          onClick={refreshPage}\n          style={{\n            cursor: \"pointer\",\n            color: \"inherit\",\n            textDecoration: \"inherit\",\n          }}\n        >\n          TJ미디어 노래 검색 Demo\n        </a>\n      </h1>\n      <h2>\n        노래 검색{\" \"}\n        <span role=\"img\" aria-label=\"emoji\">\n          🎤\n        </span>\n      </h2>\n      <p>\n        TJ미디어 노래들을 검색해보세요. (정확하지 않을 수 있음, 2024년 7월까지)\n      </p>\n      <InstantSearch indexName=\"songs\" searchClient={searchClient}>\n        <div className=\"left-panel\">\n          {/* <ClearRefinements /> */}\n          <SortBy\n            defaultrefinement=\"songs\"\n            items={[{ value: \"songs\", label: \"관련순\" }]}\n          />\n          <h2>국가</h2>\n          <RefinementList attribute=\"country\" />\n          <Configure\n            hitsPerPage={8}\n            attributesToSnippet={[\"description:50\"]}\n            snippetEllipsisText={\"...\"}\n            // filters={filterLyrics ? 'lyrics != \"\"' : ''}\n          />\n          {/* <button onClick={() => setFilterLyrics(!filterLyrics)}>\n            {filterLyrics ? \"Show All Results\" : \"Show Only Lyrics Matches\"}\n          </button> */}\n        </div>\n        <div className=\"right-panel\">\n          <SearchBox\n            autoFocus\n            placeholder={\"노래를 검색해보세요...\"}\n            queryHook={queryHook}\n          />\n          <Hits hitComponent={Hit} />\n          <Pagination showLast={true} totalPages={14} />\n        </div>\n      </InstantSearch>\n    </div>\n  );\n};\n\nconst Hit = ({ hit }) => {\n  // Function to extract and display matched lyrics snippet\n  const getMatchedLyricsSnippet = (highlightedLyrics) => {\n    const snippet = highlightedLyrics.value;\n\n    // Find the position of the highlighted tag\n    const highlightTagStart = snippet.indexOf('<mark>');\n    const highlightTagEnd = snippet.indexOf('</mark>', highlightTagStart) + 7; // length of </mark> is 7\n\n    if (highlightTagStart === -1 || highlightTagEnd === -1) {\n      return null;\n    }\n\n    // Extract the context around the highlighted part\n    const contextBefore = snippet.slice(Math.max(0, highlightTagStart - 30), highlightTagStart);\n    const highlightedText = snippet.slice(highlightTagStart, highlightTagEnd);\n    const contextAfter = snippet.slice(highlightTagEnd, Math.min(snippet.length, highlightTagEnd + 30));\n\n    // Combine the context and the highlighted part\n    const contextSnippet = `가사: ... ${contextBefore} ${highlightedText} ${contextAfter} ...`;\n\n    return (\n      <div className=\"hit-lyrics-snippet\">\n        <span dangerouslySetInnerHTML={{ __html: contextSnippet }} />\n      </div>\n    );\n  };\n\n  const lyricsSnippet = hit._highlightResult && hit._highlightResult.lyrics ? getMatchedLyricsSnippet(hit._highlightResult.lyrics) : null;\n\n  return (\n    <div key={hit.id}>\n      <div className=\"hit-title\">\n        <span>({hit.id}) </span>\n        <Highlight attribute=\"title\" hit={hit} tagName=\"mark\" />\n      </div>\n      <div className=\"hit-singer\">\n        <Snippet attribute=\"singer\" hit={hit} tagName=\"mark\" />\n      </div>\n      {lyricsSnippet}\n      {hit.youtube_url && (\n        <div className=\"hit-info\">\n          <a\n            href={hit.youtube_url}\n            className=\"custom-button\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            @YouTube 검색\n          </a>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}